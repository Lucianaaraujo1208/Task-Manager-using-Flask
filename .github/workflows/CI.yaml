name: Estudo

on:
  push:
    branches: ["CI"]

permissions:
  issues: write
  contents: write
  pull-requests: write
  security-events: write

jobs:
  # Primeiro estágio: Build
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build -t task-image .

  # Segundo estágio: Test1
   test1:
    needs: build
    name: Test1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install dependencies for Test1
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
      - name: Run all tests
        run: python -m pytest

  # Terceiro estágio: Test2
  test2:
    needs: build
    name: Test2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install dependencies for Test2
        run: python -m pip install pytest
      - name: Run pytest for Test2
        run: python -m pytest tests/test_module2.py

  # Quarto estágio: Test3.
  test3:
    needs: build
    name: Test3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install dependencies for Test3
        run: python -m pip install pytest
      - name: Run pytest for Test3
        run: python -m pytest tests/test_module3.py

  # Quinto estágio: Test4
 
  # Sexto estágio: Security Analysis
  security_analysis:
    needs: test4
    name: Security Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: python -m pip install -r requirements.txt
      - name: Create reports directory
        run: mkdir -p reports
      - name: Run dependency check
        uses: dependency-check/Dependency-Check_Action@main
        id: Dependency-Check
        with:
          project: "Task-Manager-using-Flask"
          path: "."
          format: "HTML"
          out: "reports"
          args: >
            --scan ./*.py
            --scan requirements.txt
            --failOnCVSS 7
            --enableRetired
      - name: Upload Dependency Check report
        uses: actions/upload-artifact@v4
        with:
          name: Dependency-Check report
          path: ${{ github.workspace }}/reports

  # Sétimo estágio: Security Analysis2
  security_analysis2:
    needs: security_analysis
    name: Security Analysis 2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Bandit Security Analysis
        uses: PyCQA/bandit-action@v1

  # Oitavo estágio: Deploy
  deploy:
    needs: security_analysis2
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Deploy application
        run: echo "Deploying application"