name: Estudo


on:
  push:
    branches: ["CI"]

permissions:
  issues: write
  contents: write
  pull-requests: write

# Lista dos Stages
# 1. build
# 2. test1 (Test Routes)
# 3. test2 (Test Integration)
# 4. test3 (Test Functional)
# 5. security_analysis (Bandit)
# 6. security_analysis2 (Dependency Check)
# 7. zap (ZAP Security Scan)
# 8. deploy (Deploy Application)
# 9. pull_request (Simulação de Deploy)

jobs:
  # Primeiro estágio: Build
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build -t task-image .

  # Estágio: Teste
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install pytest Flask-Testing SQLAlchemy flask_sqlalchemy flask_login flask_bcrypt flask_wtf
      - name: Run tests
        run: |
          PYTHONPATH=$PYTHONPATH:. pytest tests/test_routes.py
          PYTHONPATH=$PYTHONPATH:. pytest tests/test_integration.py
          PYTHONPATH=$PYTHONPATH:. pytest tests/test_functional.py

  # Quinto estágio: Security Analysis (Bandit)
  bandit:
    needs: test
    name: Bandit Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Bandit Analysis
        uses: PyCQA/bandit-action@v1

  # Sexto estágio: Security Analysis2 (Dependency Check).
  dependency_check:
    needs: test
    name: Dependency-Check Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: python -m pip install -r requirements.txt
      - name: Check dependencies
        uses: dependency-check/Dependency-Check_Action@main
        id: Dependency-Check
        with:
          project: "Task-Manager-using-Flask"
          path: "."
          format: "HTML"
          out: "reports"
          args: >
            --scan ./*.py
            --scan requirements.txt
            --failOnCVSS 7
            --enableRetired

  # Sétimo estágio: ZAP Security Scan.
  zap:
    needs:
      - bandit
      - dependency_check
    name: ZAP Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t task-image .
      - name: Run application
        run: |
          docker run -d -p 5000:5000 --name task-manager task-image
          sleep 30
      - name: Zap Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: "http://localhost:5000"
          issue: false
      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: ZAP Scan Report
          path: report_html.html

  # Oitavo estágio: Deploy.
  deploy:
    
    needs: zap
    name: Deploy Application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Deploy
        run: echo "Deploying application"

  # Nono estágio: Pull Request Check.
  pull_request:
    
    needs: build
    name: Pull Request Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install pytest Flask-Testing SQLAlchemy flask_sqlalchemy flask_login flask_bcrypt flask_wtf
      - name: Run tests for pull request validation
        run: |
          PYTHONPATH=$PYTHONPATH:. pytest tests/test_routes.py
          PYTHONPATH=$PYTHONPATH:. pytest tests/test_integration.py
          PYTHONPATH=$PYTHONPATH:. pytest tests/test_functional.py